server:
  port: 8080
  servlet:
    context-path: /api

spring:
  application:
    name: offline-elearning-backend
    
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/elearning_db}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:1234}
    driver-class-name: org.postgresql.Driver
    
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    defer-datasource-initialization: true
    
  sql:
    init:
      mode: always
      data-locations: classpath:data.sql
      
  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: UTC

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:mySecretKey123456789012345678901234567890}
  expiration: 86400000 # 24 hours in milliseconds

# CORS Configuration
cors:
  allowed-origins: ${CORS_ORIGINS:http://localhost:3000,http://127.0.0.1:5500,http://localhost:5500}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: true

# Logging
logging:
  level:
    com.elearning: DEBUG
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
